/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import programacao.model.Carro;
import programacao.model.Historico;

/**
 *
 * @author Koroch
 */
public class TrocaDeOleoView extends javax.swing.JFrame {
    private static List<Carro> carrosCadastro = new ArrayList<>();
    private List<Carro> carrosManut = new ArrayList<>();
    private List<Historico> historicos = new ArrayList<>();
    private List<String> linhasArquivoHist = new ArrayList<>();
    /**
     * Creates new form CadastroCarro
     * @param carros
     */
    public TrocaDeOleoView(List<Carro> carros) {
        TrocaDeOleoView.carrosCadastro = carros;
        try (BufferedReader br = new BufferedReader(new FileReader("historicos.txt"))) {
            String linha;
            while ((linha = br.readLine()) != null) {
                linhasArquivoHist.add(linha);
            }

            linhasArquivoHist.forEach(elemento -> {
                String[] dados = elemento.split("\\|");
                int qtdArray = dados.length;
                historicos.add(new Historico(
                        dados[0].trim(),
                        Integer.parseInt(dados[1].trim()),
                        (qtdArray >= 3 ? dados[2].trim() : null),
                        (qtdArray >= 4 ? dados[3].trim() : null)
                ));
            });
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Erro no arquivo historicos.txt, talvez ele ainda esteja vazio!");
        }
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBAlterarUser = new javax.swing.JButton();
        jBBuscar = new javax.swing.JButton();
        jBLimpar = new javax.swing.JButton();
        jTFNome = new javax.swing.JTextField();
        jLNome = new javax.swing.JLabel();
        jTFKmUltimaTroca = new javax.swing.JTextField();
        jLKmUltimaTroca = new javax.swing.JLabel();
        jLDataKmAtual = new javax.swing.JLabel();
        jDCDataKmAtual = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCBxAttKmAtual = new javax.swing.JCheckBox();
        jLFundo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        jBAlterarUser.setBackground(new java.awt.Color(204, 204, 204));
        jBAlterarUser.setText("Alterar");
        jBAlterarUser.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBAlterarUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarUserActionPerformed(evt);
            }
        });
        getContentPane().add(jBAlterarUser);
        jBAlterarUser.setBounds(40, 290, 190, 30);

        jBBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lupa.png"))); // NOI18N
        jBBuscar.setToolTipText("Clique aqui para procurar pelo Nome ou Marca!");
        jBBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBBuscar.setDefaultCapable(false);
        jBBuscar.setFocusPainted(false);
        jBBuscar.setFocusable(false);
        jBBuscar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBBuscar.setIconTextGap(1);
        jBBuscar.setMaximumSize(new java.awt.Dimension(120, 120));
        jBBuscar.setMinimumSize(new java.awt.Dimension(120, 120));
        jBBuscar.setName(""); // NOI18N
        jBBuscar.setPreferredSize(new java.awt.Dimension(120, 120));
        jBBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBBuscarMouseClicked(evt);
            }
        });
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(jBBuscar);
        jBBuscar.setBounds(330, 40, 40, 40);

        jBLimpar.setText("Limpar");
        jBLimpar.setToolTipText("Limpar todos dados dos campos.");
        jBLimpar.setFocusable(false);
        jBLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimparActionPerformed(evt);
            }
        });
        getContentPane().add(jBLimpar);
        jBLimpar.setBounds(250, 290, 120, 30);

        jTFNome.setToolTipText("Informe o nome ou como chamam o carro!");
        jTFNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFNomeActionPerformed(evt);
            }
        });
        getContentPane().add(jTFNome);
        jTFNome.setBounds(40, 50, 280, 30);

        jLNome.setForeground(new java.awt.Color(255, 255, 255));
        jLNome.setText("Nome:");
        getContentPane().add(jLNome);
        jLNome.setBounds(40, 30, 120, 16);

        jTFKmUltimaTroca.setToolTipText("Informe a marca do carro!");
        jTFKmUltimaTroca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFKmUltimaTrocaActionPerformed(evt);
            }
        });
        getContentPane().add(jTFKmUltimaTroca);
        jTFKmUltimaTroca.setBounds(40, 210, 190, 30);

        jLKmUltimaTroca.setForeground(new java.awt.Color(255, 255, 255));
        jLKmUltimaTroca.setText("KM da troca de óleo");
        getContentPane().add(jLKmUltimaTroca);
        jLKmUltimaTroca.setBounds(40, 190, 140, 16);

        jLDataKmAtual.setForeground(new java.awt.Color(255, 255, 255));
        jLDataKmAtual.setText("Data da última extração da KM:");
        getContentPane().add(jLDataKmAtual);
        jLDataKmAtual.setBounds(40, 110, 190, 16);

        jDCDataKmAtual.setToolTipText("Dia/Mês/Ano");
        jDCDataKmAtual.setDate(new java.util.Date(new java.util.Date().getTime()));
        jDCDataKmAtual.setDateFormatString("dd/MM/yyyy");
        jDCDataKmAtual.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDCDataKmAtualPropertyChange(evt);
            }
        });
        getContentPane().add(jDCDataKmAtual);
        jDCDataKmAtual.setBounds(40, 130, 190, 30);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Atualizar KM atual");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(210, 180, 210, 20);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("com a KM da troca?");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(210, 190, 210, 30);

        jCBxAttKmAtual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBxAttKmAtualActionPerformed(evt);
            }
        });
        getContentPane().add(jCBxAttKmAtual);
        jCBxAttKmAtual.setBounds(300, 210, 90, 30);

        jLFundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tela_de_fundo.jpeg"))); // NOI18N
        getContentPane().add(jLFundo);
        jLFundo.setBounds(-230, -210, 710, 700);

        setSize(new java.awt.Dimension(426, 373));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBAlterarUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarUserActionPerformed
        if(jTFKmUltimaTroca.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "Informe a nova quilometragem!");
            return;
        }
        
        for (Carro x: carrosCadastro) {
            if(x.getNome().toUpperCase().equals(jTFNome.getText().trim().toUpperCase())){
                x.setNome(jTFNome.getText().toUpperCase());
                x.setData_km_atual(jDCDataKmAtual.getDate()==null?"":new SimpleDateFormat("dd/MM/yyyy").format(jDCDataKmAtual.getDate()));
                x.setKm_ultima_troca(Integer.parseInt(jTFKmUltimaTroca.getText()));
                if(jCBxAttKmAtual.isSelected()){
                    x.setKm_atual(Integer.parseInt(jTFKmUltimaTroca.getText()));
                }
                cadastrarHistorico(x, jCBxAttKmAtual.isSelected());
                break;
            }
        }
        
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("carros.txt"))) {
            for (Carro carro: carrosCadastro) {
                writer.write(carro.toString());
                writer.newLine();
            }
            
            JOptionPane.showMessageDialog(null, "Carro alterado com sucesso!");
            jTFNome.setText("");
            jDCDataKmAtual.setDate(new java.util.Date(new java.util.Date().getTime()));
            jTFKmUltimaTroca.setText("");
        } catch (IOException e ) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar aquivo!");
        }
    }//GEN-LAST:event_jBAlterarUserActionPerformed

    private void cadastrarHistorico(Carro x, boolean isSelected) {
        Historico historico = null;
        if(isSelected){
            historico = new Historico(x.getPlaca(), Integer.parseInt(jTFKmUltimaTroca.getText()), jDCDataKmAtual.getDate()==null?"":new SimpleDateFormat("dd/MM/yyyy").format(jDCDataKmAtual.getDate()), "");
        }else{
            historico = new Historico(x.getPlaca(), Integer.parseInt(jTFKmUltimaTroca.getText()), jDCDataKmAtual.getDate()==null?"":new SimpleDateFormat("dd/MM/yyyy").format(jDCDataKmAtual.getDate()), "");
        }
        historicos.add(historico);
        limparCampos();
        
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("historicos.txt"))) {
            for (Historico hist: historicos) {
                writer.write(hist.toString());
                writer.newLine();
            }
            JOptionPane.showMessageDialog(null, "Histórico atualizado com sucesso!");
            limparCampos();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar aquivo!");
        }
    }
    
    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        if(!jTFNome.getText().equals("")){
            for (Carro x: carrosCadastro) {
                if(x.getNome().toUpperCase().contains(jTFNome.getText().toUpperCase())){
                    jTFNome.setText(x.getNome());
                    jCBxAttKmAtual.setSelected(false);
                    break;
                }
            }
        }

        if(jTFNome.getText().equals("")){
            if(!validaNome())
            return;
        }

    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jBBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBBuscarMouseClicked
        
    }//GEN-LAST:event_jBBuscarMouseClicked

    private void limparCampos(){
        jTFNome.setText("");
        jDCDataKmAtual.setDate(new java.util.Date(new java.util.Date().getTime()));
        jTFKmUltimaTroca.setText("");
        jCBxAttKmAtual.setSelected(false);
    }
    
    private void jBLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimparActionPerformed
        // TODO add your handling code here:
        limparCampos();
    }//GEN-LAST:event_jBLimparActionPerformed

    private void jTFNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFNomeActionPerformed

    private void jTFKmUltimaTrocaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFKmUltimaTrocaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFKmUltimaTrocaActionPerformed

    private void jDCDataKmAtualPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDCDataKmAtualPropertyChange

    }//GEN-LAST:event_jDCDataKmAtualPropertyChange

    private void jCBxAttKmAtualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBxAttKmAtualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBxAttKmAtualActionPerformed

    public boolean isStringValid(String string) {
        return string.matches("^[a-zA-ZÀ-ÿ]+( [a-zA-ZÀ-ÿ]+)*$");
    }
    
    public boolean validaNome(){
        if(!isStringValid(jTFNome.getText())){
            JOptionPane.showMessageDialog(null, "Ops! Preencha o nome corretamente!");
            return false;
        }
        return true;
    }
    
    public boolean isPlacaValid(String string) {
        return string.matches("^[A-Z]{3}-\\d{4}$|^[A-Z]{3}-\\d[A-Z]\\d{2}$");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAlterarUser;
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBLimpar;
    private javax.swing.JCheckBox jCBxAttKmAtual;
    private com.toedter.calendar.JDateChooser jDCDataKmAtual;
    private javax.swing.JLabel jLDataKmAtual;
    private javax.swing.JLabel jLFundo;
    private javax.swing.JLabel jLKmUltimaTroca;
    private javax.swing.JLabel jLNome;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTFKmUltimaTroca;
    private javax.swing.JTextField jTFNome;
    // End of variables declaration//GEN-END:variables
}
